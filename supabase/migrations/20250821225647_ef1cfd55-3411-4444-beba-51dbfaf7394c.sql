-- Create legal_cross_refs table for legal document relations
CREATE TABLE public.legal_cross_refs (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  from_provision_id bigint NOT NULL,
  to_document_number text NOT NULL,
  to_anchor text,
  ref_type text NOT NULL CHECK (ref_type IN ('clarifies', 'enabled_by', 'implements', 'cites', 'interprets', 'applies', 'mentions')),
  ref_text text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid REFERENCES auth.users(id)
);

-- Add anchor field to legal_provisions if it doesn't exist
ALTER TABLE public.legal_provisions 
ADD COLUMN IF NOT EXISTS anchor text UNIQUE;

-- Create indexes for performance
CREATE INDEX idx_legal_cross_refs_from_provision ON public.legal_cross_refs(from_provision_id);
CREATE INDEX idx_legal_cross_refs_to_document ON public.legal_cross_refs(to_document_number);
CREATE INDEX idx_legal_cross_refs_ref_type ON public.legal_cross_refs(ref_type);
CREATE INDEX idx_legal_provisions_anchor ON public.legal_provisions(anchor);

-- Enable RLS
ALTER TABLE public.legal_cross_refs ENABLE ROW LEVEL SECURITY;

-- RLS policies for legal_cross_refs
CREATE POLICY "Authenticated users can view legal cross refs" 
ON public.legal_cross_refs FOR SELECT 
USING (auth.role() = 'authenticated');

CREATE POLICY "Authenticated users can create legal cross refs" 
ON public.legal_cross_refs FOR INSERT 
WITH CHECK (auth.uid() = created_by);

CREATE POLICY "Users can update their own legal cross refs" 
ON public.legal_cross_refs FOR UPDATE 
USING (auth.uid() = created_by);

CREATE POLICY "Users can delete their own legal cross refs" 
ON public.legal_cross_refs FOR DELETE 
USING (auth.uid() = created_by);